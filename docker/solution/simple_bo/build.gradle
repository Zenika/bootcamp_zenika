buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
		kotlinVersion = '1.0.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath('se.transmode.gradle:gradle-docker:1.2') //docker plugin to build image
	}
}

apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'docker'

jar {
	baseName = 'simple_bo'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter')
	compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
	compile 'org.springframework.boot:spring-boot-starter-web'
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}


task wrapper(type: Wrapper) {
	gradleVersion = '2.9'
}

task buildDocker(type: Docker, dependsOn: build) {
	push = true
	applicationName = jar.baseName
	dockerfile = file('src/main/docker/Dockerfile')
	doFirst {
		copy {
			from jar
			into stageDir
		}
	}
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}
